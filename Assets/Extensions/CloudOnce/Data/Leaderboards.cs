// <copyright file="Leaderboards.cs" company="Jan Ivar Z. Carlsen, Sindri Jóelsson">
// Copyright (c) 2016 Jan Ivar Z. Carlsen, Sindri Jóelsson. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
// </copyright>

namespace CloudOnce
{
    using System.Collections.Generic;
    using Internal;

    /// <summary>
    /// Provides access to leaderboards registered via the CloudOnce Editor.
    /// This file was automatically generated by CloudOnce. Do not edit.
    /// </summary>
    public static class Leaderboards
    {
        private static readonly UnifiedLeaderboard s_highScore = new UnifiedLeaderboard("highScore",
#if !UNITY_EDITOR && (UNITY_IOS || UNITY_TVOS)
            ""
#elif !UNITY_EDITOR && UNITY_ANDROID && CLOUDONCE_GOOGLE
            "CgkIuvz0_NcCEAIQAA"
#else
            "highScore"
#endif
            );

        public static UnifiedLeaderboard highScore
        {
            get { return s_highScore; }
        }

        private static readonly UnifiedLeaderboard s_maxCombo = new UnifiedLeaderboard("maxCombo",
#if !UNITY_EDITOR && (UNITY_IOS || UNITY_TVOS)
            ""
#elif !UNITY_EDITOR && UNITY_ANDROID && CLOUDONCE_GOOGLE
            "CgkIuvz0_NcCEAIQAQ"
#else
            "maxCombo"
#endif
            );

        public static UnifiedLeaderboard maxCombo
        {
            get { return s_maxCombo; }
        }

        private static readonly UnifiedLeaderboard s_moneyEarned = new UnifiedLeaderboard("moneyEarned",
#if !UNITY_EDITOR && (UNITY_IOS || UNITY_TVOS)
            ""
#elif !UNITY_EDITOR && UNITY_ANDROID && CLOUDONCE_GOOGLE
            "CgkIuvz0_NcCEAIQAg"
#else
            "moneyEarned"
#endif
            );

        public static UnifiedLeaderboard moneyEarned
        {
            get { return s_moneyEarned; }
        }

        private static readonly UnifiedLeaderboard s_distance = new UnifiedLeaderboard("distance",
#if !UNITY_EDITOR && (UNITY_IOS || UNITY_TVOS)
            ""
#elif !UNITY_EDITOR && UNITY_ANDROID && CLOUDONCE_GOOGLE
            "CgkIuvz0_NcCEAIQAw"
#else
            "distance"
#endif
            );

        public static UnifiedLeaderboard distance
        {
            get { return s_distance; }
        }

        private static readonly UnifiedLeaderboard s_ballsDistroyed = new UnifiedLeaderboard("ballsDistroyed",
#if !UNITY_EDITOR && (UNITY_IOS || UNITY_TVOS)
            ""
#elif !UNITY_EDITOR && UNITY_ANDROID && CLOUDONCE_GOOGLE
            "CgkIuvz0_NcCEAIQBA"
#else
            "ballsDistroyed"
#endif
            );

        public static UnifiedLeaderboard ballsDistroyed
        {
            get { return s_ballsDistroyed; }
        }

        private static readonly UnifiedLeaderboard s_maxSpeed = new UnifiedLeaderboard("maxSpeed",
#if !UNITY_EDITOR && (UNITY_IOS || UNITY_TVOS)
            ""
#elif !UNITY_EDITOR && UNITY_ANDROID && CLOUDONCE_GOOGLE
            "CgkIuvz0_NcCEAIQBQ"
#else
            "maxSpeed"
#endif
            );

        public static UnifiedLeaderboard maxSpeed
        {
            get { return s_maxSpeed; }
        }

        public static string GetPlatformID(string internalId)
        {
            return s_leaderboardDictionary.ContainsKey(internalId)
                ? s_leaderboardDictionary[internalId].ID
                : string.Empty;
        }

        private static readonly Dictionary<string, UnifiedLeaderboard> s_leaderboardDictionary = new Dictionary<string, UnifiedLeaderboard>
        {
            { "highScore", s_highScore },
            { "maxCombo", s_maxCombo },
            { "moneyEarned", s_moneyEarned },
            { "distance", s_distance },
            { "ballsDistroyed", s_ballsDistroyed },
            { "maxSpeed", s_maxSpeed },
        };
    }
}
